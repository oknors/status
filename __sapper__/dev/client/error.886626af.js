import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, c as config, v as validate_slots, m as space, e as element, t as text, N as query_selector_all, g as detach_dev, p as claim_space, a as claim_element, b as children, f as claim_text, j as add_location, h as attr_dev, k as insert_hydration_dev, l as append_hydration_dev, n as noop } from './client.69e7c0f4.js';

/* src/routes/error.svelte generated by Svelte v3.43.2 */
const file = "src/routes/error.svelte";

function create_fragment(ctx) {
	let title_value;
	let t0;
	let h1;
	let t1_value = config.i18n.errorTitle + "";
	let t1;
	let t2;
	let p0;
	let t3_value = config.i18n.errorIntro + "";
	let t3;
	let t4;
	let p1;
	let t5_value = config.i18n.errorText + "";
	let t5;
	let t6;
	let a;
	let t7_value = config.i18n.errorHome + "";
	let t7;
	document.title = title_value = config.i18n.errorTitle;

	const block = {
		c: function create() {
			t0 = space();
			h1 = element("h1");
			t1 = text(t1_value);
			t2 = space();
			p0 = element("p");
			t3 = text(t3_value);
			t4 = space();
			p1 = element("p");
			t5 = text(t5_value);
			t6 = space();
			a = element("a");
			t7 = text(t7_value);
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all('[data-svelte=\"svelte-1iwbjab\"]', document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			h1 = claim_element(nodes, "H1", {});
			var h1_nodes = children(h1);
			t1 = claim_text(h1_nodes, t1_value);
			h1_nodes.forEach(detach_dev);
			t2 = claim_space(nodes);
			p0 = claim_element(nodes, "P", { class: true });
			var p0_nodes = children(p0);
			t3 = claim_text(p0_nodes, t3_value);
			p0_nodes.forEach(detach_dev);
			t4 = claim_space(nodes);
			p1 = claim_element(nodes, "P", {});
			var p1_nodes = children(p1);
			t5 = claim_text(p1_nodes, t5_value);
			p1_nodes.forEach(detach_dev);
			t6 = claim_space(nodes);
			a = claim_element(nodes, "A", { href: true, class: true });
			var a_nodes = children(a);
			t7 = claim_text(a_nodes, t7_value);
			a_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(h1, file, 24, 0, 431);
			attr_dev(p0, "class", "lead svelte-g7na0y");
			add_location(p0, file, 26, 0, 466);
			add_location(p1, file, 28, 0, 512);
			attr_dev(a, "href", config.path);
			attr_dev(a, "class", "button svelte-g7na0y");
			add_location(a, file, 30, 0, 544);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, t0, anchor);
			insert_hydration_dev(target, h1, anchor);
			append_hydration_dev(h1, t1);
			insert_hydration_dev(target, t2, anchor);
			insert_hydration_dev(target, p0, anchor);
			append_hydration_dev(p0, t3);
			insert_hydration_dev(target, t4, anchor);
			insert_hydration_dev(target, p1, anchor);
			append_hydration_dev(p1, t5);
			insert_hydration_dev(target, t6, anchor);
			insert_hydration_dev(target, a, anchor);
			append_hydration_dev(a, t7);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*config*/ 0 && title_value !== (title_value = config.i18n.errorTitle)) {
				document.title = title_value;
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(h1);
			if (detaching) detach_dev(t2);
			if (detaching) detach_dev(p0);
			if (detaching) detach_dev(t4);
			if (detaching) detach_dev(p1);
			if (detaching) detach_dev(t6);
			if (detaching) detach_dev(a);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('Error', slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Error> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({ config });
	return [];
}

class Error extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Error",
			options,
			id: create_fragment.name
		});
	}
}

export { Error as default };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3IuODg2NjI2YWYuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yb3V0ZXMvZXJyb3Iuc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQ+XG4gIGltcG9ydCBjb25maWcgZnJvbSBcIi4uL2RhdGEvY29uZmlnLmpzb25cIjtcbjwvc2NyaXB0PlxuXG48c3R5bGU+XG4gIHAubGVhZCB7XG4gICAgZm9udC1zaXplOiAxMTAlO1xuICB9XG4gIGEuYnV0dG9uIHtcbiAgICBmb250OiBpbmhlcml0O1xuICAgIHBhZGRpbmc6IDAuNXJlbSAxcmVtO1xuICAgIGJvcmRlcjogMC4xcmVtIHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4yNSk7XG4gICAgYm9yZGVyLXJhZGl1czogMC4ycmVtO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMWEzYTQ7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIH1cbjwvc3R5bGU+XG5cbjxzdmVsdGU6aGVhZD5cbiAgPHRpdGxlPntjb25maWcuaTE4bi5lcnJvclRpdGxlfTwvdGl0bGU+XG48L3N2ZWx0ZTpoZWFkPlxuXG48aDE+e2NvbmZpZy5pMThuLmVycm9yVGl0bGV9PC9oMT5cblxuPHAgY2xhc3M9XCJsZWFkXCI+e2NvbmZpZy5pMThuLmVycm9ySW50cm99PC9wPlxuXG48cD57Y29uZmlnLmkxOG4uZXJyb3JUZXh0fTwvcD5cblxuPGEgaHJlZj17Y29uZmlnLnBhdGh9IGNsYXNzPVwiYnV0dG9uXCI+e2NvbmZpZy5pMThuLmVycm9ySG9tZX08L2E+XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O2dCQXdCSyxNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVU7Ozs7Z0JBRVYsTUFBTSxDQUFDLElBQUksQ0FBQyxVQUFVOzs7O2dCQUVuQyxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVM7Ozs7Z0JBRWEsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTOztnQ0FUakQsTUFBTSxDQUFDLElBQUksQ0FBQyxVQUFVOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7dUJBU3ZCLE1BQU0sQ0FBQyxJQUFJOzs7Ozs7R0FOcEIsb0JBQWlDOzs7R0FFakMsb0JBQTRDOzs7R0FFNUMsb0JBQThCOzs7R0FFOUIsb0JBQWdFOzs7OzhEQVR0RCxNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=
